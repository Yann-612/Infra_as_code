name: 'Terraform Azure Pipeline'

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Provisioning
    runs-on: ubuntu-latest

    outputs:
      vm_public_ip: ${{ steps.get-ip.outputs.vm_ip }}
      ssh_private_key: ${{ steps.ssh.outputs.private_key }}
      ssh_public_key: ${{ steps.ssh.outputs.public_key }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Generate SSH key
        id: ssh
        run: |
          ssh-keygen -t rsa -b 4096 -f id_rsa -N ""
          echo "private_key=$(cat id_rsa | base64 | tr -d '\n')" >> $GITHUB_OUTPUT
          echo "public_key=$(cat id_rsa.pub)" >> $GITHUB_OUTPUT

      - name: Terraform Init
        run: terraform init
        working-directory: pipeline

      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars"
        working-directory: pipeline
        env:
          TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          TF_VAR_ssh_public_key: ${{ steps.ssh.outputs.public_key }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var-file="terraform.tfvars"
        working-directory: pipeline
        env:
          TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          TF_VAR_ssh_public_key: ${{ steps.ssh.outputs.public_key }}

      - name: Get Public IP Output
        id: get-ip
        run: |
          IP=$(terraform output -raw vm_public_ip 2>/dev/null || echo "")
          if [ -z "$IP" ]; then
            echo "Erreur : Impossible de récupérer l'IP publique depuis Terraform output." >&2
            exit 1
          fi
          echo "vm_ip=$IP" >> $GITHUB_OUTPUT
          echo "IP publique récupérée : $IP"
        working-directory: pipeline


  configure-ssh:
    name: Setup SSH and Validate
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Restore SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ needs.terraform.outputs.ssh_private_key }}" | base64 --decode > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add SSH Key to Agent
        run: |
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa adminuser@${{ needs.terraform.outputs.vm_public_ip }} "echo 'SSH OK'"

  ansible-deploy:
    name: Ansible Configuration
    runs-on: ubuntu-latest
    needs: [terraform, configure-ssh]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ needs.terraform.outputs.ssh_private_key }}" | base64 --decode > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Install Ansible & Dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-pip ansible
          pip3 install ansible-lint ansible[azure,ssh]

      - name: Create Inventory File
        run: |
          echo "[web_servers]" > inventory.ini
          echo "vm ansible_host=${{ needs.terraform.outputs.vm_public_ip }} ansible_user=adminuser ansible_ssh_private_key_file=~/.ssh/id_rsa ansible_python_interpreter=/usr/bin/python3.10" >> inventory.ini

      - name: Create ansible.cfg
        run: |
          echo "[defaults]" > ansible.cfg
          echo "inventory = inventory.ini" >> ansible.cfg
          echo "host_key_checking = False" >> ansible.cfg
          echo "retry_files_enabled = False" >> ansible.cfg

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i inventory.ini -u adminuser --private-key ~/.ssh/id_rsa projet_etude/serveur_web_linux/deploy_ansible_httpd_config/install_httpd_fedora.yml
