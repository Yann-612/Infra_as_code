name: 'Terraform Azure Pipeline'   # Nom du workflow affiché dans GitHub Actions

on:
  push:
    branches: ["main"]             # Déclenchement automatique lors d'un push sur la branche main
  pull_request:                    # Déclenchement automatique lors d'une pull request
  workflow_dispatch:               # Permet de lancer le workflow manuellement depuis GitHub

jobs:
  terraform:
    runs-on: ubuntu-latest         # Utilise un runner Ubuntu hébergé par GitHub

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Récupère le code du dépôt

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2  # Installe la CLI Terraform

      - name: Terraform Init
        run: terraform init
        working-directory: pipeline         # Dossier où se trouvent tes fichiers .tf

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: pipeline         # Vérifie le format des fichiers Terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: pipeline         # Valide la syntaxe et la cohérence des fichiers Terraform

      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars"
        working-directory: pipeline
        env:
          TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}   # Passe l'ID d'abonnement Azure depuis les secrets GitHub
          TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}               # Passe le client_id Azure depuis les secrets GitHub
          TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}       # Passe le client_secret Azure depuis les secrets GitHub
          TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}               # Passe le tenant_id Azure depuis les secrets GitHub

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' # Exécute seulement sur push main
        run: terraform apply -auto-approve -input=false -var-file="terraform.tfvars"
        working-directory: pipeline
        env:
          TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}

      - name: Debug Pipeline Directory
        run: ls -la pipeline            # Affiche le contenu du dossier pipeline pour debug (optionnel)